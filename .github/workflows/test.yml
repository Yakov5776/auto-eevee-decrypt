name: Fetch daily Telegram file

on:
  push:
  workflow_dispatch:

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install Telethon
        run: pip install telethon==1.38.1

      - name: Decode Telegram session
        env:
          TELEGRAM_SESSION_B64: ${{ secrets.TELEGRAM_SESSION_B64 }}
        run: echo "$TELEGRAM_SESSION_B64" | base64 -d > session.session

      - name: Fetch file using Telethon
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TARGET_BOT_USERNAME: '@eeveedecrypterbot'
          ROBLOX_APP_URL: 'https://apps.apple.com/us/app/roblox/id431946152'
        run: |
          python <<'PYCODE'
          import asyncio
          import os
          from telethon import TelegramClient, events

          api_id = int(os.environ["TELEGRAM_API_ID"])
          api_hash = os.environ["TELEGRAM_API_HASH"]
          target_bot = os.environ["TARGET_BOT_USERNAME"]
          roblox_app_url = os.environ["ROBLOX_APP_URL"]

          async def main():
              client = TelegramClient("session", api_id, api_hash)
              await client.start()
              print("Logged in")
              ipa_received = asyncio.Event()
              downloaded_path = None

              @client.on(events.NewMessage(from_users=target_bot))
              async def handler(event):
                  nonlocal downloaded_path
                  if event.file and event.file.name and event.file.name.endswith(".ipa"):
                      downloaded_path = await event.download_media()
                      print(f"✅ IPA file downloaded: {downloaded_path}")
                      ipa_received.set()
              
              try:
                  await asyncio.wait_for(ipa_received.wait(), timeout=120)
              except asyncio.TimeoutError:
                print("❌ Timed out waiting for IPA response.")

              await client.disconnect()

          asyncio.run(main())
          PYCODE
